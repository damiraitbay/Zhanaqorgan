require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const mongoose = require('mongoose');

const botToken = "7125595752:AAHg9FAZDebLukWU6W88W1jLjOtZCa5XhzE";
const mongodbURI = "mongodb+srv://Damir2:Damir_04@cluster0.ffeliay.mongodb.net/Zhanaqorgan?retryWrites=true&w=majority&appName=Cluster0";
const bot = new TelegramBot(botToken, { polling: true });

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(mongodbURI);
const db = mongoose.connection;

db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function() {
    console.log('Connected to MongoDB');
});

// –ú–æ–¥–µ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const User = mongoose.model('User', { username: String, isAdmin: Boolean });
const Informations = mongoose.model('Informations', { type: String, name: String, address: String, phone: String, working_hours: String, instagram: String });
const opts = {
    reply_markup: {
        keyboard: [
            ['–î“Ø–∫–µ–Ω–¥–µ—Ä'],
            ['–ê–ø—Ç–µ–∫–∞'],
            ['“ö“±—Ä—ã–ª—ã—Å –¥“Ø–∫–µ–Ω—ñ'],
            ['–ú–µ–π—Ä–∞–º—Ö–∞–Ω–∞'],
            ['–≠–ª–µ–∫—Ç—Ä–∏–∫'],
            ['–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫'],
            ['–ü–°'],
            ['“ö–æ–Ω–∞“õ “Ø–π'],
            ['–®–∞—à—Ç–∞—Ä–∞–∑'],
            ['–ñ–µ–º'],
            ['Fast food'],
            ['–û–ø—Ç–∏–∫–∞'],
        ],
        resize_keyboard: true,
        one_time_keyboard: true
    }
};
const commands = [
    { command: "start", description: "–ú”ô–∑—ñ—Ä" },
    { command: "admin", description: "–ñ–∞–∑–±–∞–Ω—ã ”©–∑–≥–µ—Ä—Ç—É" },
];

bot.setMyCommands(commands).then(() => {
    console.log('–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}).catch((error) => {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:', error);
});
// –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.onText(/\/start/, async(msg) => {
    const chatId = msg.chat.id;
    const username = msg.chat.username;
    let user = await User.findOne({ username });

    if (!user && (msg.chat.username === "damiraitbay")) {
        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = new User({ username, isAdmin: true });
        await user.save();
    } else if (!user) {
        user = new User({ username, isAdmin: false });
        await user.save();
    }
    if (user.isAdmin) { bot.sendMessage(chatId, `–ê“õ–ø–∞—Ä–∞—Ç “õ–æ—Å—É “Ø—à—ñ–Ω /admin –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑`); } else {
        bot.sendMessage(chatId, `–°”ô–ª–µ–º, “ö–∞–Ω–¥–∞–π –∞“õ–ø–∞—Ä–∞—Ç –±—ñ–ª–≥—ñ“£—ñ–∑ –∫–µ–ª–µ–¥—ñ?`, opts);
    }
});

// –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
bot.onText(/\/admin/, async(msg) => {
    const chatId = msg.chat.id;
    const username = msg.chat.username;
    let user = await User.findOne({ username });

    if (user && user.isAdmin) {
        bot.sendMessage(chatId, `–°”ô–ª–µ–º, ${username}!. “ö–∞–π –∂–µ—Ä–≥–µ –∞“õ–ø–∞—Ä–∞—Ç “õ–æ—Å“õ—ã“£—ã–∑ –∫–µ–ª–µ–¥—ñ`, opts);

        const waitForUserResponse = () => {
            return new Promise((resolve) => {
                bot.once('message', (responseMsg) => {
                    resolve(responseMsg.text);
                });
            });
        };
        const establishmentType = await waitForUserResponse(chatId);
        if (['–î“Ø–∫–µ–Ω–¥–µ—Ä', '–ê–ø—Ç–µ–∫–∞', '“ö“±—Ä—ã–ª—ã—Å –¥“Ø–∫–µ–Ω—ñ', '–ú–µ–π—Ä–∞–º—Ö–∞–Ω–∞', '–≠–ª–µ–∫—Ç—Ä–∏–∫', '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫', '–ü–°', '“ö–æ–Ω–∞“õ “Ø–π', '–®–∞—à—Ç–∞—Ä–∞–∑', '–ñ–µ–º', '–û–ø—Ç–∏–∫–∞', 'Fast food'].includes(establishmentType)) {
            await bot.sendMessage(chatId, '–ï—Å—ñ–º—ñ:');
            const establishment_name = await waitForUserResponse(chatId);
            await bot.sendMessage(chatId, '–ú–µ–∫–µ–Ω-–∂–∞–π—ã:');
            const establishment_address = await waitForUserResponse(chatId);
            await bot.sendMessage(chatId, '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä—ñ: –§–æ—Ä–º–∞—Ç(+77717547898)');
            const establishment_phone = await waitForUserResponse(chatId);
            await bot.sendMessage(chatId, '–ñ“±–º—ã—Å —É–∞“õ—ã—Ç—ã: –§–æ—Ä–º–∞—Ç(10:00-22:00)');
            const establishment_hours = await waitForUserResponse(chatId);
            await bot.sendMessage(chatId, '–ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º“ì–∞ —Å—ñ–ª—Ç–µ–º–µ –∂—ñ–±–µ—Ä—ñ“£—ñ–∑');
            const establishment_instagram = await waitForUserResponse(chatId);
            const establishmentData = {
                type: establishmentType,
                name: establishment_name,
                address: establishment_address,
                phone: establishment_phone,
                working_hours: establishment_hours,
                instagram: establishment_instagram
            };

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            const newEstablishment = new Informations(establishmentData);
            await newEstablishment.save();
            bot.sendMessage(chatId, `${establishmentType} “Ø—à—ñ–Ω –∞“õ–ø–∞—Ä–∞—Ç —Å”ô—Ç—Ç—ñ “õ–æ—Å—ã–ª–¥—ã. ”®—à—ñ—Ä—É “Ø—à—ñ–Ω /delete –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑`);
        }
    } else {
        bot.sendMessage(chatId, `–°—ñ–∑–¥–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä “õ“±“õ—ã“ì—ã –∂–æ“õ.`);
    }
});
bot.onText(/\/delete/, async(msg) => {
    const chatId = msg.chat.id;
    const username = msg.chat.username;
    let user = await User.findOne({ username });

    if (user && user.isAdmin) {
        bot.sendMessage(chatId, `”®—à—ñ—Ä—É –∫–µ—Ä–µ–∫ –∞“õ–ø–∞—Ä–∞—Ç—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑`, opts);

        const waitForUserResponse = () => {
            return new Promise((resolve) => {
                bot.once('message', (responseMsg) => {
                    resolve(responseMsg.text);
                });
            });
        };
        const establishmentType = await waitForUserResponse(chatId);
        if (['–î“Ø–∫–µ–Ω–¥–µ—Ä', '–ê–ø—Ç–µ–∫–∞', '“ö“±—Ä—ã–ª—ã—Å –¥“Ø–∫–µ–Ω—ñ', '–ú–µ–π—Ä–∞–º—Ö–∞–Ω–∞', '–≠–ª–µ–∫—Ç—Ä–∏–∫', '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫', '–ü–°', '“ö–æ–Ω–∞“õ “Ø–π', '–®–∞—à—Ç–∞—Ä–∞–∑', '–ñ–µ–º', '–û–ø—Ç–∏–∫–∞', 'Fast food'].includes(establishmentType)) {
            await bot.sendMessage(chatId, '–ï—Å—ñ–º—ñ:');
            const establishment_name = await waitForUserResponse(chatId);
            Informations.deleteOne({ name: establishment_name })
                .then((result) => {
                    if (result.deletedCount > 0) {
                        bot.sendMessage(chatId, `–ñ–∞–∑–±–∞ —Å”ô—Ç—Ç—ñ –∂–æ–π—ã–ª–¥—ã`);
                    } else {
                        console.log('–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.');
                    }
                })
                .catch((err) => {
                    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', err);
                });

        }
    } else {
        bot.sendMessage(chatId, `–°—ñ–∑–¥–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä “õ“±“õ—ã“ì—ã –∂–æ“õ.`);
    }
});

bot.on('message', async(msg) => {
    const chatId = msg.chat.id;
    const messageText = msg.text;
    const username = msg.chat.username;
    let user = await User.findOne({ username });
    const establishments = await Informations.find({ type: messageText }).exec();
    if (establishments.length === 0 && !('/start' || '/admin')) {
        bot.sendMessage(chatId, `”ò–∑—ñ—Ä–≥–µ –±“±–ª –º”ô–∑—ñ—Ä –±–æ–π—ã–Ω—à–∞ –∞“õ–ø–∞—Ä–∞—Ç –∂–æ“õ`);
    } else if (['–î“Ø–∫–µ–Ω–¥–µ—Ä', '–ê–ø—Ç–µ–∫–∞', '“ö“±—Ä—ã–ª—ã—Å –¥“Ø–∫–µ–Ω—ñ', '–ú–µ–π—Ä–∞–º—Ö–∞–Ω–∞', '–≠–ª–µ–∫—Ç—Ä–∏–∫', '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫', '–ü–°', '“ö–æ–Ω–∞“õ “Ø–π', '–®–∞—à—Ç–∞—Ä–∞–∑', '–ñ–µ–º', '–û–ø—Ç–∏–∫–∞', 'Fast food'].includes(messageText) && !user.isAdmin) {
        let message = `üîπ <b>${messageText}</b>:\n\n`;
        establishments.forEach((establishment) => {
            message += `<i>–ê—Ç—ã</i>: <b>${establishment.name}</b>\n`;
            message += `<i>–ê–¥—Ä–µ—Å—ñ</i>: ${establishment.address}\n`;
            message += `<i>–¢–µ–ª–µ—Ñ–æ–Ω</i>: ${establishment.phone}\n`;
            message += `<i>instagram</i>: ${establishment.instagram}\n`;
            message += `<i>–ñ“±–º—ã—Å —É–∞“õ—ã—Ç—ã</i>: ${establishment.working_hours}\n\n`;
        });
        bot.sendMessage(chatId, message, { parse_mode: "HTML" });
    }

});